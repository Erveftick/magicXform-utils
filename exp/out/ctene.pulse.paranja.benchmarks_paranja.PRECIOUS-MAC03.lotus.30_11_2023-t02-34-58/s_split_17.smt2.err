(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...4 rules 0s)
(transform N7datalog27mk_quantifier_instantiationE...no-op 0s)
(transform N7datalog8mk_scaleE...no-op 0s)
(transform N7datalog18mk_karr_invariantsE...no-op 0s)
(transform N7datalog14mk_array_blastE...no-op 0s)
(transform N7datalog16mk_elim_term_iteE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...3 rules 0s)
(transform N7datalog12mk_bit_blastE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...3 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...3 rules 0.001s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog8mk_sliceE...no-op 0s)
expand: query!0 (0, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 29.87 :after-memory 30.07)
Entering level 1
expand: query!0 (1, 0) FAR  w(0) 1.
	create_child: inv2 (0, 1) FAR 391 U 0.00
expand: inv2 (0, 0) FAR  w(0) 391. F 0.00
expand: query!0 (1, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 30.07 :after-memory 30.36)
Propagating: 0 1  ! 2 
(spacer::context::propagate :time 0.00 :before-memory 30.36 :after-memory 30.36)
Entering level 2
expand: query!0 (2, 0) FAR  w(0) 1.
	create_child: inv2 (1, 2) FAR 391 U 0.00
expand: inv2 (1, 0) FAR  w(0) 391. F 0.01
expand: query!0 (2, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.02 :before-memory 30.36 :after-memory 30.44)
Propagating: 1 2  ! 3 
(spacer::context::propagate :time 0.00 :before-memory 30.44 :after-memory 30.44)
Entering level 3
expand: query!0 (3, 0) FAR  w(0) 1.
	create_child: inv2 (2, 3) FAR 391 U 0.00
expand: inv2 (2, 0) FAR  w(0) 391.
	create_child: inv2 (1, 3) FAR 1011 U 0.00
expand: inv2 (1, 0) FAR  w(0) 1011.
	create_child: inv2 (0, 3) FAR 1060 U 0.00
expand: inv2 (0, 0) FAR  w(0) 1060. F 0.00
expand: inv2 (1, 0) FAR  w(0) 1011. F 0.00
expand: inv2 (2, 0) FAR  w(0) 391. F 0.00
expand: query!0 (3, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.02 :before-memory 30.44 :after-memory 30.51)
Propagating: 0 1 2 3  ! 4 5 
(spacer::context::propagate :time 0.21 :before-memory 30.51 :after-memory 30.51)
Entering level 4
expand: query!0 (4, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 30.51 :after-memory 30.61)
Propagating: 4  ! 5 
(spacer::context::propagate :time 0.00 :before-memory 30.61 :after-memory 30.61)
Entering level 5
expand: query!0 (5, 0) FAR  w(0) 1.
	create_child: inv2 (4, 5) FAR 391 U 0.00
expand: inv2 (4, 0) FAR  w(0) 391.
	create_child: inv2 (3, 5) FAR 1011 U 0.00
expand: inv2 (3, 0) FAR  w(0) 1011.
	create_child: inv2 (2, 5) FAR 1060 U 0.00
expand: inv2 (2, 0) FAR  w(0) 1060.
	create_child: inv2 (1, 5) FAR 1691 U 0.00
expand: inv2 (1, 0) FAR  w(0) 1691.
	create_child: inv2 (0, 5) FAR 1752 U 0.00
expand: inv2 (0, 0) FAR  w(0) 1752. F 0.00
expand: inv2 (1, 0) FAR  w(0) 1691. F 0.00
expand: inv2 (2, 0) FAR  w(0) 1060. F 0.05
expand: inv2 (3, 0) FAR  w(0) 1011. F 0.01
expand: inv2 (4, 0) FAR  w(0) 391. F 0.03
expand: query!0 (5, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.10 :before-memory 30.61 :after-memory 30.69)
Propagating: 0 1 2 3 4 
(spacer::context::propagate :time 0.03 :before-memory 30.69 :after-memory 30.69)
(define-fun inv2 ((x!0 Int) (x!1 Int) (x!2 Int) (x!3 Int) (x!4 Int) (x!5 Int)) Bool
  (let ((a!1 (not (>= (+ x!2 (* (- 1) x!5)) 0)))
        (a!2 (not (<= (+ x!0 (* (- 1) x!1)) 0))))
    (and (or (not (<= x!3 0)) a!1)
         (not (<= x!3 (- 1)))
         (or a!2 (not (<= x!3 0))))))
