(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (> F 0) (< C 0) (= H A) (= A B) (= A B) (> B 0) (>= 1 B))
    (inv2 F C H B A)))
(rule (let ((a!1 (and (inv2 F C H B A)
                (= D (+ F A))
                (= G (+ C 2))
                (= E (ite (>= C 0) (* H 2) H)))))
  (=> a!1 (inv2 D G E B A))))
(rule (=> (and (inv2 F C H B A) (>= C F) (not (> H A))) fail))
(query fail)

