(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (and (= I K)
         (= D 0)
         (= F B)
         (or (= K 0) (= K B))
         (= C A)
         (= 1 B)
         (> A 0)
         (>= 10 A))
    (inv2 I D F K C B A)))
(rule (let ((a!1 (= H (ite (= K (mod I 2)) (+ F D) (- F B)))))
(let ((a!2 (and (inv2 I D F K C B A)
                (= E (+ B I))
                (= J (+ D I (- 3)))
                (= G (- B K))
                a!1)))
  (=> a!2 (inv2 E J H G C B A)))))
(rule (=> (and (inv2 I D F K C B A) (> I C) (not (>= F 0))) fail))
(query fail)

