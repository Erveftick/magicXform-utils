(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= B (* 250 A)) (= C A) (> A 0) (>= 10 A)) (inv2 0 0 0 C B A)))
(rule (let ((a!1 (and (inv2 G D I C B A)
                (= E (+ G 1))
                (= H (ite (= G 0) 523 (+ D I)))
                (= F (ite (= G 0) I 250)))))
  (=> a!1 (inv2 E H F C B A))))
(rule (=> (and (inv2 G D I C B A) (>= G C) (not (> D B))) fail))
(query fail)

