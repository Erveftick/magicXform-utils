(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= B 1) (= I 0) (= D 1) (> A 0) (>= 10 A)) (inv2 G B I D A)))
(rule (let ((a!1 (ite (= (mod (+ G B) 2) D) (+ 1 I) 0)))
  (=> (and (inv2 G B I D A) (= C (+ G 1)) (= H (+ B 2)) (= F (- 1 D)) (= E a!1))
      (inv2 C H E F A))))
(rule (=> (and (inv2 G B I D A) (= G A) (not (= I G))) fail))
(query fail)