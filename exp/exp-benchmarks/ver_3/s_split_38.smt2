(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= G C) (= F 0) (= C (* 10000 A)) (= B A) (= C (* 10000 A)) (= 5 A))
    (inv2 G F C B A)))
(rule (let ((a!1 (and (inv2 G F C B A)
                (= D (ite (>= F G) (+ G B) G))
                (= E (ite (>= F G) F (+ F 1))))))
  (=> a!1 (inv2 D E C B A))))
(rule (let ((a!1 (and (inv2 G F C B A) (> F C) (not (<= (- G F) B)))))
  (=> a!1 fail)))
(query fail)

