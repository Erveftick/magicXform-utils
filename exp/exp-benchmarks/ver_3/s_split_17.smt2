(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (> H J) (= F 0) (= D 0) (= A B) (= 1000 B)) (inv2 H J F D B A)))
(rule (let ((a!1 (and (inv2 H J F D B A)
                (= C (+ H 1))
                (= E (+ J 2))
                (= I (ite (< H J) (+ F 1) F))
                (= G (ite (< H J) D (+ D 1))))))
  (=> a!1 (inv2 C E I G B A))))
(rule (=> (and (inv2 H J F D B A) (> F A) (not (> D 0))) fail))
(query fail)

