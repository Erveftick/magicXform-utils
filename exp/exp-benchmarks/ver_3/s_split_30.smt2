(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(declare-var L Int)
(rule (=> (and (= J B)
         (= E C)
         (= L (- 76))
         (= G 0)
         (= B (* 26 D))
         (= A (* 40457 D))
         (= 97 C)
         (= 2 D))
    (inv2 J E L G D C B A)))
(rule (let ((a!1 (= H (+ (* (- 5) J) (* 3 E) (* 4 L) (- 8754)))))
(let ((a!2 (and (inv2 J E L G D C B A)
                (= F (- 13 (* 7 J)))
                (= K (- 54 (* D E)))
                a!1
                (= I (ite (> H 0) (- G J) G)))))
  (=> a!2 (inv2 F K H I D C B A)))))
(rule (=> (and (inv2 J E L G D C B A) (>= E A) (not (> G 0))) fail))
(query fail)

