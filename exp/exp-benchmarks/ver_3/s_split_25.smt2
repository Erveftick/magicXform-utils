(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= D C) (= I 0) (= C (* 2 A)) (= B A) (= 5 A))
    (inv2 G D I C B A)))
(rule (let ((a!1 (and (inv2 G D I C B A)
                (= E (mod (+ G 1) 10))
                (= H (mod (- D 1) 10))
                (= F (ite (= G D) 0 (+ I 1))))))
  (=> a!1 (inv2 E H F C B A))))
(rule (=> (and (inv2 G D I C B A) (not (<= I B))) fail))
(query fail)

