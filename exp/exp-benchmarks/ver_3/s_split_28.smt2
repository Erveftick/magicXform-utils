(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= F 0) (>= C B) (= H 0) (= B A) (= 100 A)) (inv2 F C H B A)))
(rule (let ((a!1 (= E (ite (<= C (div F 50)) (+ H 1) H))))
  (=> (and (inv2 F C H B A) (= D (+ 1 F)) (= G (- C 1)) a!1) (inv2 D G E B A))))
(rule (=> (and (inv2 F C H B A) (= C 0) (not (> H 0))) fail))
(query fail)

