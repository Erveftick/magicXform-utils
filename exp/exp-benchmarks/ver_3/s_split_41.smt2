(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= H 0) (= G D) (= D (* 3 B)) (= A (* 4 B)) (= C (* 2 B)) (= 2500 B))
    (inv2 H G D C B A)))
(rule (let ((a!1 (= E (ite (= 0 (mod H 2)) (+ H 2) (+ H 1)))))
(let ((a!2 (and (inv2 H G D C B A) a!1 (= F (ite (>= H C) (+ G 1) G)))))
  (=> a!2 (inv2 E F D C B A)))))
(rule (=> (and (inv2 H G D C B A) (= H A) (not (= G A))) fail))
(query fail)

