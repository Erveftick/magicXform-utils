(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= B 0) (= I 0) (= D 0) (= 100 A)) (inv2 G B I D A)))
(rule (let ((a!1 (ite (> (- B (* 10 G)) 0) (+ I 1) I))
      (a!2 (ite (> (- B (* 10 G)) 0) D (+ D 1))))
  (=> (and (inv2 G B I D A) (= C (+ G 1)) (= H (+ B G)) (= E a!1) (= F a!2))
      (inv2 C H E F A))))
(rule (=> (and (inv2 G B I D A) (> G A) (not (> I D))) fail))
(query fail)

