(declare-rel inv2 (Int Int Int Int))
(declare-rel fail ())
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= E 0) (= B 0) (= G (- 1)) (= 942573485 A)) (inv2 E B G A)))
(rule (let ((a!1 (= D (ite (= (mod E 2) 0) (+ 1 G) G))))
(let ((a!2 (and (inv2 E B G A) (= C (+ E 1)) (= F (- (+ B E))) a!1)))
  (=> a!2 (inv2 C F D A)))))
(rule (let ((a!1 (and (inv2 E B G A) (= E A) (not (= 0 (+ B G))))))
  (=> a!1 fail)))
(query fail)

