(declare-rel inv2 (Int Int Int))
(declare-rel fail ())
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(rule (=> (and (= D 0) (>= A 100) (= F 0)) (inv2 D A F)))
(rule (let ((a!1 (= C (ite (<= A (div D 50)) (+ F 1) F))))
  (=> (and (inv2 D A F) (= B (+ 1 D)) (= E (- A 1)) a!1) (inv2 B E C))))
(rule (=> (and (inv2 D A F) (= A 0) (not (> F 0))) fail))
(query fail)

