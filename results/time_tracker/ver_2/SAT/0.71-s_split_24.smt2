(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (or (= G 0) (= G 1))
         (or (= D 0) (= D 1))
         (= I 0)
         (> A 0)
         (>= 100 A)
         (= C (* 4 A))
         (= B A))
    (inv2 G D I C B A)))
(rule (let ((a!1 (= F (ite (= (mod G 2) (mod D 2)) (+ 1 I) I))))
  (=> (and (inv2 G D I C B A) (= E (+ G 2)) (= H (+ D 3)) a!1)
      (inv2 E H F C B A))))
(rule (=> (and (inv2 G D I C B A) (> G C) (not (>= I B))) fail))
(query fail)

