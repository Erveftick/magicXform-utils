(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= E 0) (= D A) (= (- 100) C) (= 100 B) (= 1 A)) (inv2 E D C B A)))
(rule (let ((a!1 (= G (ite (and (> F C) (< F B)) D (- D)))))
  (=> (and (inv2 E D C B A) (= F (+ E D)) a!1) (inv2 F G C B A))))
(rule (let ((a!1 (and (inv2 D E C B A) (not (and (>= D C) (<= D B))))))
  (=> a!1 fail)))
(query fail)

