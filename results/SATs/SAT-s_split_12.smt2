(declare-rel inv2 (Int Int Int Int))
(declare-rel fail ())
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= D 0) (= E 0) (= G 0) (= 1342342 A)) (inv2 E D G A)))
(rule (let ((a!1 (= B (ite (= (mod D 2) 0) (+ E 1) E)))
      (a!2 (= C (ite (= (mod D 2) 0) G (+ G 1)))))
  (=> (and (inv2 D E G A) a!1 (= F (+ D 1)) a!2) (inv2 F B C A))))
(rule (=> (and (inv2 E D G A) (= E A) (not (= D G))) fail))
(query fail)

