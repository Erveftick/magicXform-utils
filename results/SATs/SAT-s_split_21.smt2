(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= J 0) (= F B) (= H 0) (= I B) (= 1 B) (= 10 A)) (inv2 H F J I B A)))
(rule (let ((a!1 (ite (= (mod (+ H F) 2) J) (+ B I) 0)))
  (=> (and (inv2 H F I J B A)
           (= E (- B J))
           (= D (+ F 2))
           (= C (+ H B))
           (= G a!1))
      (inv2 C D G E B A))))
(rule (=> (and (inv2 I H J F B A) (= I A) (not (= J I))) fail))
(query fail)

