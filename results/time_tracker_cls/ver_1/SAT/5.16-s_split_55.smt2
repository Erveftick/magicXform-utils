(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= F 0) (= C 0) (distinct H 0) (= 200 B) (= 100 A)) (inv2 F C H B A)))
(rule (let ((a!1 (and (inv2 F C H B A)
                (= D (+ F 1))
                (= G (ite (> H 0) (+ C 1) (- C 2)))
                (= E (ite (= F A) (- H) H)))))
  (=> a!1 (inv2 D G E B A))))
(rule (=> (and (inv2 F C H B A) (= F B) (not (<= C 0))) fail))
(query fail)

