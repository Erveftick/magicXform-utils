(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= J B) (= F 0) (= H I) (or (= I 0) (= I B)) (= 1 B) (= 10 A))
    (inv2 H F J I B A)))
(rule (let ((a!1 (= G (ite (= H (mod F 2)) (+ I J) (- I B)))))
(let ((a!2 (and (inv2 F J I H B A)
                (= E (- B H))
                (= D (+ J F (- 3)))
                (= C (+ B F))
                a!1)))
  (=> a!2 (inv2 C D G E B A)))))
(rule (=> (and (inv2 J H I F B A) (> J A) (not (>= I 0))) fail))
(query fail)

