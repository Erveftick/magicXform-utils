(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= I 0) (= E 0) (= G 0) (= H 0) (= 100 A)) (inv2 G E I H A)))
(rule (let ((a!1 (ite (> (- E (* 10 I)) 0) (+ G 1) G))
      (a!2 (ite (> (- E (* 10 I)) 0) H (+ H 1))))
  (=> (and (inv2 I E G H A) (= F a!1) (= C (+ E I)) (= B (+ I 1)) (= D a!2))
      (inv2 B C F D A))))
(rule (=> (and (inv2 E G I H A) (> E A) (not (> I H))) fail))
(query fail)

