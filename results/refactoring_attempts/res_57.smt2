(declare-rel fail ())
(declare-rel inv (Int))
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (= 1000 A) (inv A)))
(rule (=> (and (inv A) (= I 0) (= D 1000) (= K 2000) (= F 3000) (= C (* 3 A)) (= B (* 2 A)))
    (inv2 I D K F B C)))
(rule (let ((a!1 (and (inv A) (inv2 I D K F B C)
                (= E (+ 1 I))
                (= J (ite (>= I B) (+ D 1) D))
                (= G (ite (>= D A) (+ K 1) K))
                (= H (ite (>= K C) (+ F 1) F)))))
  (=> a!1 (inv2 E J G H B C))))
(rule (=> (and (inv2 I D K F B C) (>= K C) (not (= I C))) fail))
(query fail)

