(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= G 0) (= F 0) (> A 0) (>= 50000000 A) (= C A) (= B (* 2 A)))
    (inv2 G F C B A)))
(rule (let ((a!1 (= E (ite (>= G C) (ite (>= G B) F (+ F 1)) 0))))
  (=> (and (inv2 G F C B A) (= D (+ 1 G)) a!1) (inv2 D E C B A))))
(rule (=> (and (inv2 G F C B A) (>= G B) (not (= F C))) fail))
(query fail)

