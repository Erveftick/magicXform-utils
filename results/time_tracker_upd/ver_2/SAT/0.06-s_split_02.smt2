(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= D B) (= I C) (> A 0) (>= 200 A) (= C (* 2 A)) (= B A))
    (inv2 G D I C B A)))
(rule (let ((a!1 (and (inv2 G D I C B A)
                (= E (+ 1 G))
                (= H (ite (< G B) (+ D 1) D))
                (= F (ite (< G B) I (+ I 2))))))
  (=> a!1 (inv2 E H F C B A))))
(rule (let ((a!1 (and (inv2 G D I C B A) (>= D C) (not (= I (* 2 G))))))
  (=> a!1 fail)))
(query fail)

