(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= H 0) (> A 0) (>= 200 A) (= D A) (= C (* 5 A)) (= B (* 10 A)))
    (inv2 H G D C B A)))
(rule (let ((a!1 (= E (ite (< (div H 5) D) (+ H 1) (+ H 5)))))
(let ((a!2 (and (inv2 H G D C B A) a!1 (= F (ite (= H C) 0 G)))))
  (=> a!2 (inv2 E F D C B A)))))
(rule (=> (and (inv2 H G D C B A) (>= H B) (not (= G 0))) fail))
(query fail)

