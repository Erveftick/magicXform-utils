(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0)
         (= D 0)
         (distinct I 0)
         (> A 0)
         (>= 100 A)
         (= C (* 2 A))
         (= B A))
    (inv2 G D I C B A)))
(rule (let ((a!1 (and (inv2 G D I C B A)
                (= E (+ G 1))
                (= H (ite (> I 0) (+ D 1) (- D 2)))
                (= F (ite (= G B) (- I) I)))))
  (=> a!1 (inv2 E H F C B A))))
(rule (=> (and (inv2 G D I C B A) (= G C) (not (<= D 0))) fail))
(query fail)

