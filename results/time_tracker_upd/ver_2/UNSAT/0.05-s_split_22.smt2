(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= H 0) (= E 767976) (= J 0) (> A 0) (>= 280275 A) (= D A))
    (inv2 H E J D B B A)))
(rule (let ((a!1 (ite (= (mod (- H E) 3) B) (+ 3 J) J)))
  (=> (and (inv2 H E J D B B A) (= F (+ H B)) (= I (- E B)) (= G a!1))
      (inv2 F I G D B B A))))
(rule (=> (and (inv2 H E J D B B A) (>= H D) (not (>= J D))) fail))
(query fail)

