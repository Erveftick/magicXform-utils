(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (and (= I 0)
         (= D 0)
         (= K 0)
         (= F 0)
         (> A 0)
         (>= 1000 A)
         (= C A)
         (= B (* 999 A)))
    (inv2 I D K F C B A)))
(rule (let ((a!1 (and (inv2 I D K F C B A)
                (= E (mod (+ I 1) 2000))
                (= J (+ D 1))
                (= G (ite (< I C) (+ K 1) K))
                (= H (ite (>= I C) (+ F 1) F)))))
  (=> a!1 (inv2 E J G H C B A))))
(rule (let ((a!1 (and (inv2 I D K F C B A) (= D B) (not (= C (- K F))))))
  (=> a!1 fail)))
(query fail)

