(declare-rel inv2 (Int Int Int Int))
(declare-rel fail ())
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var N Int)
(rule (=> (and (= E 0) (>= B 0) (= G 0) (= (* 777 5) A)) (inv2 E B G A)))
(rule (let ((a!1 (ite (< E (* N (+ 5 B))) (+ G 1) G)))
(let ((a!2 (= D (ite (>= E (* N B)) a!1 G))))
  (=> (and (= N 777) (inv2 E B G A) (= C (+ 1 E)) (= F B) a!2) (inv2 C B D A)))))
(rule (let ((a!1 (and (inv2 E B G A) (>= E (* 777 (+ 10 B))) (not (= G A)))))
  (=> a!1 fail)))
(query fail)

