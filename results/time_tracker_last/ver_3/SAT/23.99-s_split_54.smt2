(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (and (= I 0) (= F D) (= K 0) (= D A) (= D A) (= C (* 2 A)) (= 8000 A))
    (inv2 I F K D D C A A)))
(rule (let ((a!1 (and (inv2 I F K D D C A A)
                (= G (+ I 1))
                (= J (ite (>= I D) (+ F 1) (- F 1)))
                (= H (ite (< I D) (+ K 1) (- K 1))))))
  (=> a!1 (inv2 G J H D D C A A))))
(rule (let ((a!1 (and (inv2 I F K D D C A A) (= I C) (not (and (= F D) (= K 0))))))
  (=> a!1 fail)))
(query fail)

