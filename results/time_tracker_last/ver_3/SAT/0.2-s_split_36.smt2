(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (let ((a!1 (and (= G C) (= F 0) (= C (* C (- A))) (= 1 A))))
  (=> a!1 (inv2 G F C A A))))
(rule (let ((a!1 (and (inv2 G F C A A)
                (= D (ite (>= F G) (+ G A) G))
                (= E (ite (>= F G) (- G) (+ F 2))))))
  (=> a!1 (inv2 D E C A A))))
(rule (let ((a!1 (and (inv2 G F C A A) (>= G 0) (not (>= G (- F A))))))
  (=> a!1 fail)))
(query fail)

