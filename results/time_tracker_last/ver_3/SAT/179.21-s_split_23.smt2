(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= G D) (= H C) (= D (* 10 A)) (= C A) (= 100 A)) (inv2 G H D C A A)))
(rule (let ((a!1 (= E (ite (< (div G 10) H) (+ G 1) (- G 1))))
      (a!2 (= F (ite (< (div G 10) H) (- H 1) (+ H 1)))))
  (=> (and (inv2 G H D C A A) a!1 a!2) (inv2 E F D C A A))))
(rule (=> (and (inv2 G H D C A A) (not (< H G))) fail))
(query fail)

