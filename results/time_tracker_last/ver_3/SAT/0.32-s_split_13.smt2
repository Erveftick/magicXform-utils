(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= G C) (= H 0) (= C A) (= C A) (= 1 A)) (inv2 G H C C A A)))
(rule (let ((a!1 (= F (ite (= (mod G 3) C) (+ H G) (- H G)))))
  (=> (and (inv2 G H C C A A) (= E (- G)) a!1) (inv2 E F C C A A))))
(rule (=> (and (inv2 G H C C A A) (not (>= H 0))) fail))
(query fail)

