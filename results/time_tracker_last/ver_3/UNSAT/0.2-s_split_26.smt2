(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= G 0) (>= D C) (= H 0) (= C (* C A)) (= 1 A)) (inv2 G D H C A A)))
(rule (let ((a!1 (= F (ite (>= D (div G 50)) (+ H A) H))))
  (=> (and (inv2 G D H C A A) (= E (+ A G)) a!1) (inv2 E D F C A A))))
(rule (=> (and (inv2 G D H C A A) (> G (* 50 D)) (not (> H 0))) fail))
(query fail)

