(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (let ((a!1 (and (= G D) (= H D) (= D (* (- 25) (- A))) (= C A) (= 4 A))))
  (=> a!1 (inv2 G H D C A A))))
(rule (let ((a!1 (and (inv2 G H D C A A)
                (= E (mod (+ G 1) 5))
                (= F (ite (< H C) (+ H 1) (mod H 4))))))
  (=> a!1 (inv2 E F D C A A))))
(rule (=> (and (inv2 G H D C A A) (>= H 0) (not (= G H))) fail))
(query fail)

