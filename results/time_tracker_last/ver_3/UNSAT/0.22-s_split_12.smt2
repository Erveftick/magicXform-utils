(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= D 0) (= I 0) (= C (* C A)) (= 1 A)) (inv2 G D I C A A)))
(rule (let ((a!1 (= H (ite (= (mod G 2) 0) (+ D A) D)))
      (a!2 (= F (ite (= (mod G 2) 0) I (+ I A)))))
  (=> (and (inv2 G D I C A A) (= E (+ G A)) a!1 a!2) (inv2 E H F C A A))))
(rule (=> (and (inv2 G D I C A A) (= G C) (not (= D I))) fail))
(query fail)

