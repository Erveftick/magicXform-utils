(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (and (= I 0)
         (= F E)
         (= K 0)
         (= E (* 255992 A))
         (= D (* 93425 A))
         (= 1 B)
         (= 3 A))
    (inv2 I F K E D A B A)))
(rule (let ((a!1 (ite (= (mod (- I F) 3) B) (+ A K) K)))
  (=> (and (inv2 I F K E D A B A) (= G (+ I B)) (= J (- F B)) (= H a!1))
      (inv2 G J H E D A B A))))
(rule (=> (and (inv2 I F K E D A B A) (>= I D) (not (>= K D))) fail))
(query fail)

