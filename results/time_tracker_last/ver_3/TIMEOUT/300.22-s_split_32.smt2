(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(declare-var L Int)
(rule (=> (and (= J L) (= E 0) (= G B) (or (= L 0) (= L B)) (= D A) (= 1 B) (= 10 A))
    (inv2 J E G L D A B A)))
(rule (let ((a!1 (= I (ite (= L (mod J 2)) (+ G E) (- G B)))))
(let ((a!2 (and (inv2 J E G L D A B A)
                (= F (+ B J))
                (= K (+ E J (- 3)))
                (= H (- B L))
                a!1)))
  (=> a!2 (inv2 F K I H D A B A)))))
(rule (=> (and (inv2 J E G L D A B A) (> J D) (not (>= G 0))) fail))
(query fail)

