(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (and (or (= I 0) (= I B))
         (or (= F 0) (= F B))
         (= K 0)
         (= E (* 4 A))
         (= D A)
         (= 1 B)
         (= 100 A))
    (inv2 I F K E D A B A)))
(rule (let ((a!1 (= H (ite (= (mod I 2) (mod F 2)) (+ B K) K))))
  (=> (and (inv2 I F K E D A B A) (= G (+ I 2)) (= J (+ F 3)) a!1)
      (inv2 G J H E D A B A))))
(rule (=> (and (inv2 I F K E D A B A) (> I E) (not (>= K D))) fail))
(query fail)

