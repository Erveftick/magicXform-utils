(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= J 0)
         (= I 0)
         (= F (* 4 A))
         (= E (* 6 A))
         (= D (* 5 A))
         (= C (* 10 A))
         (= 1000 A))
    (inv2 J I F E D C A A)))
(rule (let ((a!1 (= H
              (ite (< J D)
                   (ite (>= J F) (+ I 4) (+ I 1))
                   (ite (>= J E) (- I 1) (- I 4))))))
  (=> (and (inv2 J I F E D C A A) (= G (+ J 1)) a!1) (inv2 G H F E D C A A))))
(rule (=> (and (inv2 J I F E D C A A) (= J C) (not (= I 0))) fail))
(query fail)

