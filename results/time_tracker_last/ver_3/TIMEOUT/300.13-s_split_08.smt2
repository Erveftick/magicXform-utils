(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= G 0) (= F 0) (= C (* C A)) (= 1 A)) (inv2 G F C A A)))
(rule (let ((a!1 (= E (ite (= (mod G 2) 0) (+ F A) F))))
  (=> (and (inv2 G F C A A) (= D (+ G A)) a!1) (inv2 D E C A A))))
(rule (=> (and (inv2 G F C A A) (= G (* 2 C)) (not (= F C))) fail))
(query fail)

