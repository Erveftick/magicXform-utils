(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (< G 0) (> E G) (or (= I 0) (= I B)) (= D A) (= 1 B) (= 54932 A))
    (inv2 G E I D A B A)))
(rule (let ((a!1 (= H (ite (= (mod G 2) I) (+ E 2) E))))
  (=> (and (inv2 G E I D A B A) (= F (+ G B)) a!1) (inv2 F H I D A B A))))
(rule (=> (and (inv2 G E I D A B A) (> G D) (not (> E D))) fail))
(query fail)

