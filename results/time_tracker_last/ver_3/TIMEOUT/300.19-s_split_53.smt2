(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(declare-var L Int)
(declare-var M Int)
(rule (=> (and (= K 0)
         (= F 0)
         (= M 0)
         (= H D)
         (= D (* 2 A))
         (= D (* 2 A))
         (= C (* 9 A))
         (= 250 A))
    (inv2 K F M H D D C A A)))
(rule (let ((a!1 (and (inv2 K F M H D D C A A)
                (= G (mod (+ K 1) 1000))
                (= L (+ F 1))
                (= I (ite (< K D) (+ M 1) (- M 1)))
                (= J (ite (>= K D) (+ H 1) (- H 1))))))
  (=> a!1 (inv2 G L I J D D C A A))))
(rule (=> (and (inv2 K F M H D D C A A) (= F C) (not (= M H))) fail))
(query fail)

