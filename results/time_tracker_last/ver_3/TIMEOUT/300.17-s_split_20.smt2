(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= H 0) (= E 0) (= J B) (= D A) (= (- 1) B) (= 942573485 A))
    (inv2 H E J D A B A)))
(rule (let ((a!1 (= G (ite (= (mod H 2) 0) (+ 1 J) J))))
(let ((a!2 (and (inv2 H E J D A B A) (= F (+ H 1)) (= I (- (+ E H))) a!1)))
  (=> a!2 (inv2 F I G D A B A)))))
(rule (let ((a!1 (and (inv2 H E J D A B A) (= H D) (not (= 0 (+ E J))))))
  (=> a!1 fail)))
(query fail)

