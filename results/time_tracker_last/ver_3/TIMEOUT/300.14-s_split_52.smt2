(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= G 0) (= E D) (= D C) (= C (* C A)) (= 1 A)) (inv2 G E D C A A)))
(rule (let ((a!1 (and (inv2 G E D C A A)
                (= F (+ G A))
                (= H (ite (>= G D) (+ E A) (- E A))))))
  (=> a!1 (inv2 F H D C A A))))
(rule (=> (and (inv2 G E D C A A) (= G (* 2 D)) (not (= E D))) fail))
(query fail)

