(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(declare-var L Int)
(declare-var M Int)
(declare-var N Int)
(declare-var O Int)
(declare-var P Int)
(rule (=> (and (= N 0)
         (= I D)
         (= P C)
         (= K E)
         (= E (* 3 A))
         (= D A)
         (= C (* 2 A))
         (= E (* 3 A))
         (= D A)
         (= C (* 2 A))
         (= 1000 A))
    (inv2 N I P K E D C E D C A A)))
(rule (let ((a!1 (and (inv2 N I P K E D C E D C A A)
                (= J (+ 1 N))
                (= O (ite (>= N D) (+ I 1) I))
                (= L (ite (>= I C) (+ P 1) P))
                (= M (ite (>= P E) (+ K 1) K)))))
  (=> a!1 (inv2 J O L M E D C E D C A A))))
(rule (=> (and (inv2 N I P K E D C E D C A A) (>= P E) (not (= N K))) fail))
(query fail)

