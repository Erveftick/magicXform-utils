(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (> G I) (= E 0) (= C 0) (> A 0) (>= 1000 A)) (inv2 G I E C A)))
(rule (let ((a!1 (and (inv2 G I E C A)
                (= B (+ G 1))
                (= D (+ I 2))
                (= H (ite (< G I) (+ E 1) E))
                (= F (ite (< G I) C (+ C 1))))))
  (=> a!1 (inv2 B D H F A))))
(rule (=> (and (inv2 G I E C A) (> E A) (not (> C 0))) fail))
(query fail)

