(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= F 0) (= C 200) (= H 400) (> B 0) (>= 400 B) (> A 0) (>= 200 A))
    (inv2 F C H B A)))
(rule (let ((a!1 (and (inv2 F C H B A)
                (= D (+ 1 F))
                (= G (ite (< F A) (+ C 1) C))
                (= E (ite (< F A) H (+ H 2))))))
  (=> a!1 (inv2 D G E B A))))
(rule (let ((a!1 (and (inv2 F C H B A) (>= C B) (not (= H (* 2 F))))))
  (=> a!1 fail)))
(query fail)

