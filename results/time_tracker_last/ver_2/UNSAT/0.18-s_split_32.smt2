(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G I) (= B 0) (= D 1) (or (= I 0) (= I 1)) (> A 0) (>= 10 A))
    (inv2 G B D I A)))
(rule (let ((a!1 (= F (ite (= I (mod G 2)) (+ D B) (- D 1)))))
(let ((a!2 (and (inv2 G B D I A)
                (= C (+ 1 G))
                (= H (+ B G (- 3)))
                (= E (- 1 I))
                a!1)))
  (=> a!2 (inv2 C H F E A)))))
(rule (=> (and (inv2 G B D I A) (> G A) (not (>= D 0))) fail))
(query fail)

