(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...4 rules 0s)
(transform N7datalog27mk_quantifier_instantiationE...no-op 0s)
(transform N7datalog8mk_scaleE...no-op 0s)
(transform N7datalog18mk_karr_invariantsE...no-op 0s)
(transform N7datalog14mk_array_blastE...no-op 0s)
(transform N7datalog16mk_elim_term_iteE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog12mk_bit_blastE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...3 rules 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...3 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...3 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog8mk_sliceE...no-op 0s)
expand: query!0 (0, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 29.62 :after-memory 29.82)
Entering level 1
expand: query!0 (1, 0) FAR  w(0) 1.
	create_child: inv (0, 1) FAR 249 U 0.00
expand: inv (0, 0) FAR  w(0) 249. F 0.00
expand: query!0 (1, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 29.82 :after-memory 30.01)
Propagating: 0 1  ! 2 
(spacer::context::propagate :time 0.00 :before-memory 30.01 :after-memory 30.11)
Entering level 2
expand: query!0 (2, 0) FAR  w(0) 1.
	create_child: inv (1, 2) FAR 249 U 0.00
expand: inv (1, 0) FAR  w(0) 249.
	create_child: inv (0, 2) FAR 1 UNDEF 0.00
expand: inv (0, 0) FAR  w(0) 1. T 0.00
is-reachable: inv (1, 0) FAR 249 F 0.00
expand: inv (1, 0) FAR  w(1) 249.
	create_child: inv (0, 2) FAR 691 U 0.00
expand: inv (0, 0) FAR  w(0) 691. UNDEF 0.00
expand: inv (0, 0) FAR  w(1) 691. F 0.00
expand: inv (1, 0) FAR  w(1) 249.
	create_child: inv (0, 2) FAR 916 U 0.00
expand: inv (0, 0) FAR  w(0) 916. UNDEF 0.00
expand: inv (0, 0) FAR  w(1) 916. F 0.00
expand: inv (1, 0) FAR  w(1) 249.
	create_child: inv (0, 2) FAR 1042 U 0.00
expand: inv (0, 0) FAR  w(0) 1042. F 0.00
expand: inv (1, 0) FAR  w(1) 249. F 0.00
expand: query!0 (2, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 30.11 :after-memory 30.21)
Propagating: 0 1 2  ! 3 
(spacer::context::propagate :time 0.00 :before-memory 30.21 :after-memory 30.21)
Entering level 3
expand: query!0 (3, 0) FAR  w(0) 1.
	create_child: inv (2, 3) FAR 249 U 0.00
expand: inv (2, 0) FAR  w(0) 249. UNDEF 0.00
expand: inv (2, 0) FAR  w(1) 249.
	create_child: inv (1, 3) FAR 691 U 0.00
expand: inv (1, 0) FAR  w(0) 691.
	create_child: inv (0, 3) FAR 1740 U 0.00
expand: inv (0, 0) FAR  w(0) 1740. F 0.00
expand: inv (1, 0) FAR  w(0) 691. F 0.00
expand: inv (2, 0) FAR  w(1) 249.
	create_child: inv (1, 3) FAR 1042 U 0.00
expand: inv (1, 0) FAR  w(0) 1042. F 0.00
expand: inv (2, 0) FAR  w(1) 249. F 0.00
expand: query!0 (3, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 30.21 :after-memory 30.45)
Propagating: 0 1 2 3  ! 4 
(spacer::context::propagate :time 0.00 :before-memory 30.45 :after-memory 30.45)
Entering level 4
expand: query!0 (4, 0) FAR  w(0) 1.
	create_child: inv (3, 4) FAR 249 U 0.00
expand: inv (3, 0) FAR  w(0) 249.
	create_child: inv (2, 4) FAR 691 U 0.00
expand: inv (2, 0) FAR  w(0) 691.
	create_child: inv (1, 4) FAR 1740 U 0.00
expand: inv (1, 0) FAR  w(0) 1740.
	create_child: inv (0, 4) FAR 2448 UNDEF 0.00
expand: inv (0, 0) FAR  w(0) 2448. T 0.00
is-reachable: inv (1, 0) FAR 1740 F 0.00
expand: inv (1, 0) FAR  w(1) 1740. F 0.00
expand: inv (2, 0) FAR  w(0) 691. F 0.00
expand: inv (3, 0) FAR  w(0) 249.
	create_child: inv (2, 4) FAR 1042 U 0.00
expand: inv (2, 0) FAR  w(0) 1042.
	create_child: inv (1, 4) FAR 2776 U 0.00
expand: inv (1, 0) FAR  w(0) 2776.
	create_child: inv (0, 4) FAR 2690 U 0.00
expand: inv (0, 0) FAR  w(0) 2690. F 0.00
expand: inv (1, 0) FAR  w(0) 2776. F 0.00
expand: inv (2, 0) FAR  w(0) 1042. F 0.00
expand: inv (3, 0) FAR  w(0) 249. F 0.00
expand: query!0 (4, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.03 :before-memory 30.45 :after-memory 30.67)
Propagating: 0 1 2 3 4  ! 5 
(spacer::context::propagate :time 0.00 :before-memory 30.67 :after-memory 30.67)
Entering level 5
expand: query!0 (5, 0) FAR  w(0) 1.
	create_child: inv (4, 5) FAR 249 U 0.00
expand: inv (4, 0) FAR  w(0) 249.
	create_child: inv (3, 5) FAR 691 U 0.00
expand: inv (3, 0) FAR  w(0) 691.
	create_child: inv (2, 5) FAR 1740 U 0.00
expand: inv (2, 0) FAR  w(0) 1740.
	create_child: inv (1, 5) FAR 3391 U 0.00
expand: inv (1, 0) FAR  w(0) 3391.
	create_child: inv (0, 5) FAR 3372 U 0.00
expand: inv (0, 0) FAR  w(0) 3372. F 0.00
expand: inv (1, 0) FAR  w(0) 3391. F 0.00
expand: inv (2, 0) FAR  w(0) 1740. F 0.00
expand: inv (3, 0) FAR  w(0) 691. F 0.00
expand: inv (4, 0) FAR  w(0) 249.
	create_child: inv (3, 5) FAR 1042 U 0.00
expand: inv (3, 0) FAR  w(0) 1042 C 0.00
expand: inv (3, 0) FAR  w(0) 3691.
	create_child: inv (2, 5) FAR 3678 U 0.00
expand: inv (2, 0) FAR  w(0) 3678.
	create_child: inv (1, 5) FAR 3747 U 0.00
expand: inv (1, 0) FAR  w(0) 3747. F 0.00
expand: inv (2, 0) FAR  w(0) 3678. F 0.00
expand: inv (3, 0) FAR  w(0) 3691. F 0.00
expand: inv (3, 0) FAR  w(0) 1042. F 0.00
expand: inv (4, 0) FAR  w(0) 249. F 0.00
expand: query!0 (5, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.04 :before-memory 30.67 :after-memory 30.84)
Propagating: 0 1 
(spacer::context::propagate :time 0.00 :before-memory 30.84 :after-memory 30.84)
(define-fun inv ((x!0 Int) (x!1 Int)) Bool
  (let ((a!1 (or (not (>= x!0 1)) (not (>= (mod x!0 3) 2))))
        (a!2 (not (>= (+ (* 3 x!0) (* (- 1) x!1)) (- 1))))
        (a!4 (or (not (<= x!0 0)) (not (= (mod x!0 3) 1)))))
  (let ((a!3 (or (not (>= (mod x!0 3) 2)) a!2)))
    (and a!1
         (not (<= x!1 (- 1)))
         (not (<= (mod x!0 3) 0))
         (not (<= (+ x!0 x!1) (- 1)))
         a!3
         a!4))))
