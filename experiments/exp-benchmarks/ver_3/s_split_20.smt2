(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= D 0) (= I A) (= B C) (= (- 1) A) (= 942573485 C))
    (inv2 G D I C B A)))
(rule (let ((a!1 (= F (ite (= (mod G 2) 0) (+ 1 I) I))))
(let ((a!2 (and (inv2 G D I C B A) (= E (+ G 1)) (= H (- (+ D G))) a!1)))
  (=> a!2 (inv2 E H F C B A)))))
(rule (let ((a!1 (and (inv2 G D I C B A) (= G B) (not (= 0 (+ D I))))))
  (=> a!1 fail)))
(query fail)

