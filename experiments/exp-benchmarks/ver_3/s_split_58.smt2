(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= F 0) (= G 0) (= A B) (= 1000 B)) (inv2 F C G B A)))
(rule (let ((a!1 (= E (ite (= C (div F 1000)) (+ G 1) G))))
  (=> (and (inv2 F C G B A) (= D (+ 1 F)) a!1) (inv2 D C E B A))))
(rule (let ((a!1 (and (inv2 F C G B A) (> F (* A (+ 1 C))) (>= C 0) (not (= G A)))))
  (=> a!1 fail)))
(query fail)

