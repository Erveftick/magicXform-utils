(declare-rel inv2 (Int Int Int Int))
(declare-rel fail ())
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(rule (=> (and (= F B) (= E 0) (= B A) (= (- 10000) A)) (inv2 F E B A)))
(rule (let ((a!1 (and (inv2 F E B A)
                (= C (ite (>= E F) (+ F 1) F))
                (= D (ite (>= E F) (- F) (+ E 2))))))
  (=> a!1 (inv2 C D B A))))
(rule (let ((a!1 (and (inv2 F E B A) (>= F 0) (not (>= F (- E 1))))))
  (=> a!1 fail)))
(query fail)

