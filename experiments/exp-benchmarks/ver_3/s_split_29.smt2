(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= H 0) (= C 0) (= J 0) (= E 0) (= B A) (= 100 A)) (inv2 H C J E B A)))
(rule (let ((a!1 (ite (> (- C (* 10 H)) 0) (+ J 1) J))
      (a!2 (ite (> (- C (* 10 H)) 0) E (+ E 1))))
  (=> (and (inv2 H C J E B A) (= D (+ H 1)) (= I (+ C H)) (= F a!1) (= G a!2))
      (inv2 D I F G B A))))
(rule (=> (and (inv2 H C J E B A) (> H B) (not (> J E))) fail))
(query fail)

