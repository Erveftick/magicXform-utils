(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(rule (=> (and (= G 0) (= D A) (= I 0) (= A C) (= A C) (= B (* 2 C)) (= 8000 C))
    (inv2 G D I C B A)))
(rule (let ((a!1 (and (inv2 G D I C B A)
                (= E (+ G 1))
                (= H (ite (>= G A) (+ D 1) (- D 1)))
                (= F (ite (< G A) (+ I 1) (- I 1))))))
  (=> a!1 (inv2 E H F C B A))))
(rule (let ((a!1 (and (inv2 G D I C B A) (= G B) (not (and (= D A) (= I 0))))))
  (=> a!1 fail)))
(query fail)

