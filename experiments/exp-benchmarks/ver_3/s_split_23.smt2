(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= F A) (= G C) (= A (* 10 B)) (= C B) (= 100 B)) (inv2 F G C B A)))
(rule (let ((a!1 (= D (ite (< (div F 10) G) (+ F 1) (- F 1))))
      (a!2 (= E (ite (< (div F 10) G) (- G 1) (+ G 1)))))
  (=> (and (inv2 F G C B A) a!1 a!2) (inv2 D E C B A))))
(rule (=> (and (inv2 F G C B A) (not (< G F))) fail))
(query fail)

