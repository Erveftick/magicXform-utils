(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= H 0) (= G C) (= D (- A)) (= B A) (= 1 C) (= 100 A))
    (inv2 H G D C B A)))
(rule (let ((a!1 (= F (ite (and (> E D) (< E B)) G (- G)))))
  (=> (and (inv2 H G D C B A) (= E (+ H G)) a!1) (inv2 E F D C B A))))
(rule (let ((a!1 (and (inv2 H G D C B A) (not (and (>= H D) (<= H B))))))
  (=> a!1 fail)))
(query fail)

