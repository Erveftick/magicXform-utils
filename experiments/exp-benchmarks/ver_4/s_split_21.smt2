(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Int)
(rule (=> (and (= I 0) (= D B) (= K 0) (= F B) (= C A) (= 1 B) (> A 0) (>= 10 A))
    (inv2 I D K F C B A)))
(rule (let ((a!1 (ite (= (mod (+ I D) 2) F) (+ B K) 0)))
  (=> (and (inv2 I D K F C B A)
           (= E (+ I B))
           (= J (+ D 2))
           (= H (- B F))
           (= G a!1))
      (inv2 E J G H C B A))))
(rule (=> (and (inv2 I D K F C B A) (= I C) (not (= K I))) fail))
(query fail)

