(declare-rel inv2 (Int Int Int Int))
(declare-rel fail ())
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(rule (=> (and (= E A) (= F 0) (= A B) (= A B) (> B 0) (>= 1 B)) (inv2 E F B A)))
(rule (let ((a!1 (= D (ite (= (mod E 3) A) (+ F E) (- F E)))))
  (=> (and (inv2 E F B A) (= C (- E)) a!1) (inv2 C D B A))))
(rule (=> (and (inv2 E F B A) (not (>= F 0))) fail))
(query fail)

