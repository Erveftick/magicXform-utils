(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= F 0) (= C 0) (= H (- 1)) (> A 0) (>= 942573485 A) (= B A))
    (inv2 F C H B A)))
(rule (let ((a!1 (= E (ite (= (mod F 2) 0) (+ 1 H) H))))
(let ((a!2 (and (inv2 F C H B A) (= D (+ F 1)) (= G (- (+ C F))) a!1)))
  (=> a!2 (inv2 D G E B A)))))
(rule (let ((a!1 (and (inv2 F C H B A) (= F B) (not (= 0 (+ C H))))))
  (=> a!1 fail)))
(query fail)

