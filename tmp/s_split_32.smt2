(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= H J) (= C 0) (= E 1) (or (= J 0) (= J 1)) (> A 0) (>= 10 A) (= B A))
    (inv2 H C E J B A)))
(rule (let ((a!1 (= G (ite (= J (mod H 2)) (+ E C) (- E 1)))))
(let ((a!2 (and (inv2 H C E J B A)
                (= D (+ 1 H))
                (= I (+ C H (- 3)))
                (= F (- 1 J))
                a!1)))
  (=> a!2 (inv2 D I G F B A)))))
(rule (=> (and (inv2 H C E J B A) (> H B) (not (>= E 0))) fail))
(query fail)

