(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= G 0) (= F 7500) (> A 0) (>= 5000 A) (= C (* 2 A)) (= B A))
    (inv2 G F C B A)))
(rule (let ((a!1 (= D (ite (= 0 (mod G 2)) (+ G 2) (+ G 1)))))
(let ((a!2 (and (inv2 G F C B A) a!1 (= E (ite (>= G B) (+ F 1) F)))))
  (=> a!2 (inv2 D E C B A)))))
(rule (=> (and (inv2 G F C B A) (= G C) (not (= F C))) fail))
(query fail)

