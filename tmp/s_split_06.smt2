(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= H B) (= E 0) (= J 0) (> A 0) (>= 342341341 A) (= D A))
    (inv2 H E J D B B A)))
(rule (let ((a!1 (and (inv2 H E J D B B A)
                (= F (- H))
                (= I (ite (> H 0) (+ E B) E))
                (= G (ite (> H 0) J (+ J B))))))
  (=> a!1 (inv2 F I G D B B A))))
(rule (=> (and (inv2 H E J D B B A) (= H B) (= E D) (not (= D J))) fail))
(query fail)

