(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(rule (=> (and (= G 0) (= F 1) (> A 0) (>= 100 A) (= C A) (= B A)) (inv2 G F C B A)))
(rule (let ((a!1 (= E (ite (and (> D C) (< D B)) F (- F)))))
  (=> (and (inv2 G F C B A) (= D (+ G F)) a!1) (inv2 D E C B A))))
(rule (let ((a!1 (and (inv2 G F C B A) (not (and (>= G C) (<= G B))))))
  (=> a!1 fail)))
(query fail)

