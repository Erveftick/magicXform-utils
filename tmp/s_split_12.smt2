(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(rule (=> (and (= F 0) (= C 0) (= H 0) (> A 0) (>= 1342342 A) (= B A))
    (inv2 F C H B A)))
(rule (let ((a!1 (= G (ite (= (mod F 2) 0) (+ C 1) C)))
      (a!2 (= E (ite (= (mod F 2) 0) H (+ H 1)))))
  (=> (and (inv2 F C H B A) (= D (+ F 1)) a!1 a!2) (inv2 D G E B A))))
(rule (=> (and (inv2 F C H B A) (= F B) (not (= C H))) fail))
(query fail)

