(declare-rel fail ())
(declare-rel inv2 (Int Int Int Int Int Int))
(declare-var A Int)
(declare-var B Int)
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Int)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(rule (=> (and (= H 0) (= C 1) (= J 0) (= E 1) (> A 0) (>= 10 A) (= B A))
    (inv2 H C J E B A)))
(rule (let ((a!1 (ite (= (mod (+ H C) 2) E) (+ 1 J) 0)))
  (=> (and (inv2 H C J E B A)
           (= D (+ H 1))
           (= I (+ C 2))
           (= G (- 1 E))
           (= F a!1))
      (inv2 D I F G B A))))
(rule (=> (and (inv2 H C J E B A) (= H B) (not (= J H))) fail))
(query fail)

